#gPowerShell Triage Script

$sysKeys = "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run", "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce"

ForEach($key in $sysKeys){
	Get-ItemProperty Registry::$key
}

$users = (Get-WmiObject Win32_UserProfile | Where-Object { $_.SID -notmatch 'S-1-5-(18|19|20).*' })
$userPaths = $users.localpath
$userSIDs = $users.sid

for ($counter=0; $counter -lt $users.length; $counter++){
	$path = $users[$counter].localpath
	$sid = $users[$counter].sid
	reg load hku\$sid $path\ntuser.dat
}

Get-ItemProperty Registry::\hku\*\software\microsoft\windows\currentversion\run;
Get-ItemProperty Registry::\hku\*\software\microsoft\windows\currentversion\runonce;

ForEach($key in $sysKeys){
	Get-ItemProperty Registry::$key
}

Get-WmiObject win32_service | select Name, DisplayName | Format-List

$tasks = Get-ChildItem "C:\Windows\System32\Tasks" -Recurse

ForEach($task in $tasks){
	Write-Host "`r`n[+] Task: $task"
	Write-Host "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++`r`n"
	Get-Content $task -ErrorAction SilentlyContinue | Select-String -Pattern '<Command>' -SimpleMatch
}

Write-Host "`r`n[+] WMI Subscriptions:`r`n"
Write-Host "+++++++++++++++++++++++"
Get-WmiObject -Namespace root/Subscription -Class __EventFilter

Write-Host "`r`n[+] Startup Folder Contents:`r`n"
$path = 'C:\Users\*\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\*'
Get-ChildItem $path | Where-Object {$_.name -ne 'desktop.ini'}

Write-Host "`r`n[+] Terminal Services Logons:`r`n"
Write-Host "++++++++++++++++++++++++++++++++`r`n"
$Before = Get-Date 2022/02/01;
$After = Get-Date 2022/02/28;
Get-WinEvent -FilterHashtable @{ LogName='Security';StartTime=$After; EndTime=$Before; Id='4624'}|Where {$_.Message -match "Logon Type:\s+10"}|Select TimeCreated,Message

Write-Host "`r`nRecently Written Files:`r`n"
Write-Host "+++++++++++++++++++++++++++++++`r`n"

$recentFiles = Get-ChildItem -Path C:\ -Filter *.exe -Recurse -ErrorAction SilentlyContinue -Force|? {$_.LastWriteTime -gt (Get-Date).AddHours(-1)}|select -exp FullName

ForEach($file in $recentFiles){
	Write-Host $file
}

# Check for Alternate Data Streams:

Write-Host "`r`nFiles with ADS:`r`n"
Write-Host "++++++++++++++++++++++++++`r`n"

ForEach ($file in $recentFiles){
	Get-Item $file -stream * | Where-Object stream -ne ':$Data'
	
}

